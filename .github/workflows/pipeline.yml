# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Build
    - run: npm run build --if-present

    - name: Tests
    - run: npm test

    - name: Automated Version Bump
      id: version-bump
      uses: 'phips28/gh-action-bump-version@master'
      with:
        tag-prefix: 'v'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get Project Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@v1.3.1

    - name: Update Version in Deployment and Readme
    - run: echo 'Current Version: ${{ steps.package-version.outputs.current-version }}'
    - run: sed -i'' "/svdadmin:/s/[[:digit:]].[[:digit:]].[[:digit:]]*/${{steps.package-version.outputs.current-version}}/" ".kubernetes/production/deployment.yaml"
    - run: sed -i'' "/production-/s/[[:digit:]].[[:digit:]].[[:digit:]]*/${{steps.package-version.outputs.current-version}}/" "README.md"

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/svadmin:${{ steps.package-version.outputs.current-version}}
